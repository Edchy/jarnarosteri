<nav class="side-navigation hidden" aria-level="page vertical navigation">
  <div class="menu">
    <a href="#" class="menu-item" aria-label="Scroll to top"><span></span></a>
    <a href="#" class="menu-item" aria-label="Scroll to middle"><span></span></a
    >
    <a href="#" class="menu-item" aria-label="Scroll to bottom"><span></span></a
    >
  </div>
</nav>

<style>
  .hidden {
    visibility: hidden;
  }
  .side-navigation {
    position: fixed;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    z-index: 999;
  }

  .menu {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .menu-item {
    display: block;
    width: 5px;
    height: 30px;
    background-color: var(--color-dark);
    border-radius: 5px;
    transition: all 0.1s ease;
    border: 1px solid rgba(255, 255, 255, 0.81);
  }

  .menu-item:hover {
    background-color: #555;
    transform: scale(1.1);
  }

  /* Active state for the currently active stripe */
  .menu-item-active {
    height: 60px;
    background-color: #333;
    /* transform: scale(1.3); */
  }

  .menu-item span {
    display: none; /* For future use if needed */
  }
</style>

<script>
  document.addEventListener("astro:page-load", function () {
    const menuItems = document.querySelectorAll(".menu-item");
    const sideNav = document.querySelector(".side-navigation");

    if (!sideNav || menuItems.length === 0) return; // Prevent script from running if sideNav doesn't exist

    const totalHeight =
      document.documentElement.scrollHeight - window.innerHeight;
    const scrollToTop = 0;
    const scrollToMiddle = totalHeight / 2;
    const scrollToBottom = totalHeight;

    menuItems[0].addEventListener("click", (e) => {
      e.preventDefault();
      window.scrollTo({ top: scrollToTop, behavior: "smooth" });
    });

    menuItems[1].addEventListener("click", (e) => {
      e.preventDefault();
      window.scrollTo({ top: scrollToMiddle, behavior: "smooth" });
    });

    menuItems[2].addEventListener("click", (e) => {
      e.preventDefault();
      window.scrollTo({ top: scrollToBottom, behavior: "smooth" });
    });

    const handleActiveMenu = () => {
      const scrollPosition = window.scrollY;

      menuItems.forEach((item) => item.classList.remove("menu-item-active"));

      if (scrollPosition < scrollToMiddle) {
        menuItems[0].classList.add("menu-item-active");
      } else if (
        scrollPosition >= scrollToMiddle &&
        scrollPosition < scrollToBottom
      ) {
        menuItems[1].classList.add("menu-item-active");
      } else {
        menuItems[2].classList.add("menu-item-active");
      }
    };

    let isScrolling;

    const onScroll = () => {
      if (sideNav.classList.contains("hidden")) {
        sideNav.classList.remove("hidden");
      }

      clearTimeout(isScrolling);

      isScrolling = setTimeout(() => {
        handleActiveMenu();
      }, 100);
    };

    window.addEventListener("scroll", onScroll);

    // Initialize the correct active menu item on page load
    handleActiveMenu();

    // Clean up event listeners when navigating away
    document.addEventListener("astro:before-swap", () => {
      window.removeEventListener("scroll", onScroll); // Remove the scroll listener
    });
  });
</script>
