---
import Layout from "./Layout.astro";
import BackBtn from "../components/BackBtn.astro";
import { fade } from "astro:transitions";
import { slide } from "astro:transitions";

interface Props {
  heading: string;
  bg: string;
  color: string;
  transitionName: string;
  clipBg?: string;
  dot?: string;
  shapeDividerFill?: string;
}

const { dot, heading, transitionName, bg, clipBg, color, shapeDividerFill } =
  Astro.props;
---

<header class="clip-bg">
  <div class="custom-shape-divider-bottom-1726578149">
    <svg
      data-name="Layer 1"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 1200 120"
      preserveAspectRatio="none"
    >
      <path
        d="M321.39,56.44c58-10.79,114.16-30.13,172-41.86,82.39-16.72,168.19-17.73,250.45-.39C823.78,31,906.67,72,985.66,92.83c70.05,18.48,146.53,26.09,214.34,3V0H0V27.35A600.21,600.21,0,0,0,321.39,56.44Z"
        class="shape-fill"></path>
    </svg>
  </div>
  <BackBtn />
  <section class="grid">
    <slot name="reverse" />
    <div class="heading-container">
      <h1
        transition:animate={slide({ duration: "1s" })}
        transition:name={`card-title-${transitionName}`}
      >
        {heading}<span class="brand-color dot">.</span>
      </h1>
    </div>
    <slot />
  </section>
  <!-- <script>
    const h1 = document.querySelector("h1");
    h1.setAttribute("data-aos", "zoom-in");
  </script> -->
</header>

<style define:vars={{ dot, clipBg, bg, color, shapeDividerFill }}>
  .custom-shape-divider-bottom-1726578149 {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
  }

  .custom-shape-divider-bottom-1726578149 svg {
    position: relative;
    display: block;
    width: calc(139% + 1.3px);
    height: 56px;
    transform: rotateY(180deg);
  }

  .custom-shape-divider-bottom-1726578149 .shape-fill {
    fill: var(--shapeDividerFill);
  }
  .dot {
    color: var(--dot);
  }
  .clip-bg {
    background-color: var(--clipBg);
    position: relative;
  }
  section {
  }
  .grid {
    /* background-image: url("/images/1.png"); */
    background-color: var(--bg);
    color: var(--color-3);
    color: var(--color);
    width: min(100%, 1500px);
    /* width: var(--wrapper); */
    margin-inline: auto;
    display: grid;
    grid-template-columns: 1fr 3fr;
    height: 98vh;
    gap: 1rem;
    /* -webkit-mask: var(--mask-edge-zig-zag-right); */

    @media (min-width: 700px) {
      grid-template-columns: 1fr 2fr 1fr;
    }
  }

  .heading-container {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
  h1 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(270deg);
    white-space: nowrap;
    font-size: min(8rem, 1rem + 15vw);
    z-index: 12;

    /* text-decoration: overline; */
  }

  a:hover {
    color: white;
  }
</style>
